
dependencies {
    api 'org.jetbrains.kotlin:kotlin-script-runtime'
    api 'org.jetbrains.kotlin:kotlin-script-util'
    api 'org.jetbrains.kotlin:kotlin-compiler-embeddable'
    api 'org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable'

    def maven_version = "3.5.0"
    api group: 'org.apache.maven', name: 'maven-resolver-provider', version: maven_version

    def maven_resolver_version = "1.4.2"
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-api', version: maven_resolver_version
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-impl', version: maven_resolver_version
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-util', version: maven_resolver_version
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-transport-http', version: maven_resolver_version
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-transport-file', version: maven_resolver_version
    api group: 'org.apache.maven.resolver', name: 'maven-resolver-connector-basic', version: maven_resolver_version

}

def generatedSourceDir = new File(buildDir, "generated/src/main/kotlin")
sourceSets.main.kotlin.srcDirs += generatedSourceDir.absolutePath

task injectVersion() {
    doLast {
        def packageFolder = project.group.replace(".", "/")
        def versionFile = new File(generatedSourceDir, "$packageFolder/version.kt")
        if (!versionFile.parentFile.exists()) {
            versionFile.parentFile.mkdirs()
            versionFile.createNewFile()
        }
        versionFile.write(
                "package ${project.group}\n\n" +
                        "object kts {\n\n" +
                        "   @JvmField\n" +
                        "   val version = \"${project.version}\"\n\n" +
                        "}\n"
        )

    }
}

compileKotlin.dependsOn injectVersion
